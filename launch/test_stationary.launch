<launch>


  <rosparam command='load' file='$(find et_circumnavigation)/param/target.yaml'/>

  
  
  <group ns='agent1'>


    <rosparam param='node_name'>
      'agent1'
    </rosparam>

    <param name='rate' type='double' value='250.0'/>

    <param name='delay' type='double' value='0.0'/>

    <rosparam param='initial_position'>
      [-1.0, 0.8]
    </rosparam>

    <rosparam param='initial_estimate'>
      [-0.3, 0.3]
    </rosparam>

    <rosparam command='load' file='$(find et_circumnavigation)/param/target.yaml'/>
    <rosparam command='load' file='$(find et_circumnavigation)/param/estimate_stationary.yaml'/>
    <rosparam command='load' file='$(find et_circumnavigation)/param/planner_stationary.yaml'/>


    <node name='vehicle_simulator'
      pkg='et_circumnavigation'
      type='vehicle_simulator.py'/>

    <node name='planner'
      pkg='et_circumnavigation'
      type='planner.py'
      output='screen'/>

    <node name='estimate_stationary'
      pkg='et_circumnavigation'
      type='estimate_stationary.py'
      output='screen'/>

    <node name='sensor_simulator_stationary'
      pkg='et_circumnavigation'
      type='sensor_simulator_stationary.py'/>

    <node name='neighbor_designer'
      pkg='et_circumnavigation'
      type='neighbor_designer.py'/>


  </group>


  <group ns='agent2'>

    <rosparam param='node_name'>
      'agent2'
    </rosparam>

    <param name='rate' type='double' value='250.0'/>

    <param name='delay' type='double' value='2.0'/>

    <rosparam param='initial_position'>
      [-1.0,1.0]
    </rosparam>

    <rosparam param='initial_estimate'>
      [-0.3, -0.3]
    </rosparam>

    <rosparam command='load' file='$(find et_circumnavigation)/param/target.yaml'/>
    <rosparam command='load' file='$(find et_circumnavigation)/param/estimate_stationary.yaml'/>
    <rosparam command='load' file='$(find et_circumnavigation)/param/planner_stationary.yaml'/>
  

    <node name='vehicle_simulator'
      pkg='et_circumnavigation'
      type='vehicle_simulator.py'/>

    <node name='planner'
      pkg='et_circumnavigation'
      type='planner.py'
      output='screen'/>

    <node name='estimate_stationary'
      pkg='et_circumnavigation'
      type='estimate_stationary.py'
      output='screen'/>

    <node name='sensor_simulator_stationary'
      pkg='et_circumnavigation'
      type='sensor_simulator_stationary.py'/>

    <node name='neighbor_designer'
      pkg='et_circumnavigation'
      type='neighbor_designer.py'/>

  </group>

  <group ns='agent3'>

    <rosparam param='node_name'>
      'agent3'
    </rosparam>

    <param name='rate' type='double' value='250.0'/>

    <param name='delay' type='double' value='3.0'/>

    <rosparam param='initial_position'>
      [1.0,1.0]
    </rosparam>

    <rosparam param='initial_estimate'>
      [-0.3, -0.3]
    </rosparam>

    <rosparam command='load' file='$(find et_circumnavigation)/param/target.yaml'/>
    <rosparam command='load' file='$(find et_circumnavigation)/param/estimate_stationary.yaml'/>
    <rosparam command='load' file='$(find et_circumnavigation)/param/planner_stationary.yaml'/>
  

    <node name='vehicle_simulator'
      pkg='et_circumnavigation'
      type='vehicle_simulator.py'/>

    <node name='planner'
      pkg='et_circumnavigation'
      type='planner.py'
      output='screen'/>

    <node name='estimate_stationary'
      pkg='et_circumnavigation'
      type='estimate_stationary.py'
      output='screen'/>

    <node name='sensor_simulator_stationary'
      pkg='et_circumnavigation'
      type='sensor_simulator_stationary.py'/>

    <node name='neighbor_designer'
      pkg='et_circumnavigation'
      type='neighbor_designer.py'/>

  </group>






    <node name='cloud_add_remove'
      pkg='et_circumnavigation'
      type='cloud_add_remove.py'
      output='screen'/>

    <param name='rate' type='double' value='250.0'/>
    
    <rosparam command='load' file='$(find et_circumnavigation)/param/plotter_stationary.yaml'/>

    <node name='plotter_stationary'
      pkg='et_circumnavigation'
      type='plotter_stationary.py'/>

</launch>
